// pages/index.tsx

import Head from 'next/head';
import { useEffect, useState } from 'react';
import { IconeLua, IconeSol } from '../icons';
import products from '../data/products.json';
import promos from '../data/promo.json';
import ShoppingCart from '../components/ShoppingCart';
import AvatarUsuario from '../components/AvatarUsuario';
import useAppData from '../data/hook/useAppData';
import useAuth from '../data/hook/useAuth'; 
import route from 'next/router';

export default function Home() {
    const { theme, changeTheme, cart, resetCart, addCart, removeCart } = useAppData();
    const { logout } = useAuth(); 

    const [isClient, setIsClient] = useState(false);

    useEffect(() => {
        setIsClient(true); 
    }, []);

    function renderClientContent() {
        function login() {
            route.push('/autenticacao');
        }

        
        return (
            <div className={`${theme}`}>
                <Head>
                    <title>Create Next App</title>
                    <meta name="description" content="Generated by create next app" />
                    <link rel="icon" href="/favicon.ico" />
                </Head>

                <main className={`flex flex-col h-screen w-screen bg-gray-300 dark:bg-gray-800`}>
                    <h1 className="m-6"> Tema: {theme} </h1>
                    <div>
                        {theme === 'dark' ? (
                            <div
                                onClick={changeTheme}
                                className={`
                                    hidden sm:flex items-center cursor-pointer
                                    bg-gradient-to-r from-yellow-300 to-yellow-600
                                    w-14 lg:w-24 h-8 p-1 rounded-full
                                `}
                            >
                                <div
                                    className={`
                                        flex items-center justify-center
                                        bg-white text-yellow-600
                                        w-6 h-6 rounded-full
                                    `}
                                >
                                    {IconeSol(4)}
                                </div>
                                <div
                                    className={`
                                        hidden lg:flex items-center ml-4
                                        text-white
                                    `}
                                >
                                    <span className="text-sm">Claro</span>
                                </div>
                            </div>
                        ) : (
                            <div
                                onClick={changeTheme}
                                className={`
                                    hidden sm:flex items-center justify-end cursor-pointer
                                    bg-gradient-to-r from-gray-500 to-gray-900
                                    w-14 lg:w-24 h-8 p-1 rounded-full
                                `}
                            >
                                <div
                                    className={`
                                        hidden lg:flex items-center mr-2
                                        text-gray-300
                                    `}
                                >
                                    <span className="text-sm">Escuro</span>
                                </div>
                                <div
                                    className={`
                                        flex items-center justify-center
                                        bg-black text-yellow-300
                                        w-6 h-6 rounded-full
                                    `}
                                >
                                    {IconeLua(4)}
                                </div>
                            </div>
                        )}
                    </div>
                    <div className="flex flex-row">
                        <AvatarUsuario />
                        <button
                            className="flex w-32 justify-center bg-blue-700 hover:bg-blue-900 text-white font-bold py-2 px-4 rounded m-2"
                            onClick={login}
                        >
                            Login
                        </button>
                        <button
                            className="flex w-32 justify-center bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded m-2"
                            onClick={logout}
                        >
                            Logout
                        </button>
                    </div>

                    <div className="flex flex-col">
                        {products.map((product) => (
                            <div key={product.id}>
                                <div>
                                    {product.id} - {product.name} {product.details.voltage} - R${product.price}/un
                                </div>
                                <button
                                    className="bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded mt-2"
                                    onClick={() =>
                                        addCart({
                                            product: { name: product.name, price: product.price, image_url: product.image_url },
                                            quantity: 1,
                                        })
                                    }
                                >
                                    Add
                                </button>
                                <button
                                    className="bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded mt-2"
                                    onClick={() =>
                                        removeCart({
                                            product: { name: product.name, price: product.price, image_url: product.image_url },
                                            quantity: 1,
                                        })
                                    }
                                >
                                    Remove
                                </button>
                            </div>
                        ))}
                        {promos.map((product, index) => (
                            <div key={index}>
                                <div>
                                    {index} - {product.products.map((items) => `${items.name} - ${items.quantity}`)}
                                </div>
                                <button
                                    className="bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded mt-2"
                                    onClick={() =>
                                        addCart({
                                            product: { name: `promo${index}`, price: product.price, image_url: product.image_url },
                                            quantity: 1,
                                        })
                                    }
                                >
                                    Add
                                </button>
                                <button
                                    className="bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded mt-2"
                                    onClick={() =>
                                        removeCart({
                                            product: { name: `promo${index}`, price: product.price, image_url: product.image_url },
                                            quantity: 1,
                                        })
                                    }
                                >
                                    Remove
                                </button>
                            </div>
                        ))}
                    </div>
                    <ShoppingCart />

                    <button onClick={resetCart}>RESET</button>
                </main>

                <footer></footer>
            </div>
        );
    }

    return (
        <div>
            {!isClient ? null : renderClientContent()}
            {/* Renderiza o conte√∫do do cliente somente quando isClient for true */}
        </div>
    );
}
